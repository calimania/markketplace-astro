---
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Pagination from "@components/Pagination.astro";
import Card from "@components/Card";
import { SITE } from "@config";
import HeroImage from "@components/HeroImage.astro";
import Hr from "@components/Hr.astro";

import { getCollection } from "astro:content";
import type Store from "@interfaces/Store";
import { slugifyStr } from "@utils/slugify";

export interface Props {
  currentPage: number;
  totalPages: number;
  stores: CollectionEntry<"stores">[];
}

export async function getStaticPaths() {
  const stores = await getCollection("stores");

  const postResult = stores.map((post: Store) => ({
    params: {
      slug: `${post.data.slug || slugifyStr(post.data.title)}`,
    },
    props: { store: post },
  }));

  return [...postResult];
}

const { currentPage, totalPages } = Astro.props;

const { slug } = Astro.params;

const stores = await getCollection("stores");
const store = stores.find((store: Store) => store.data.slug == slug);
---

<Layout
  title={`Store | ${store?.data?.title}`}
  meta={{
    title: `MarkkÃ«t Store | ${store?.data?.title}`,
    description: store?.data?.SEO?.metaDescription || store?.data?.Description,
  }}
>
  <Header activeNav="pages" store={store} />
  <main id="main-content">
    <section id="about" class="mb-10 max-w-3xl prose-img:border-0">
      {
        store?.data?.SEO?.socialImage && (
          <HeroImage
            image={store?.data?.SEO?.socialImage}
            title={store?.data?.title}
          />
        )
      }
      <h1 class="text-2xl tracking-wider sm:text-3xl">
        {store?.data?.title}
      </h1>
      <p>{store?.data.Description}</p>
    </section>
    <Hr />
  </main>

  <Pagination
    {currentPage}
    {totalPages}
    prevUrl={`/blog${currentPage - 1 !== 1 ? "/" + (currentPage - 1) : ""}/`}
    nextUrl={`/blog/${currentPage + 1}/`}
  />

  <Footer noMarginTop={totalPages > 1} activeNav="x" />
</Layout>
