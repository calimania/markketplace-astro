---
import { type CollectionEntry, getCollection } from "astro:content";
import Posts from "@layouts/Posts.astro";
import PostDetails from "@layouts/PostDetails.astro";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";
import { slugifyStr } from "@utils/slugify";

export interface Props {
  post: CollectionEntry<"posts">;
}

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  const postResult = posts.map(post => ({
    params: {
      slug: `${new Date(post.data.updatedAt).getFullYear()}-${slugifyStr(post.data.Title)}`,
    },
    props: { post: post },
  }));

  const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const posts = await getCollection("posts");

const pagination = getPagination({
  posts,
  page: slug,
});
---

{post ? <PostDetails post={post} /> : <Posts {...pagination} />}
