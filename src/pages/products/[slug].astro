---
import { getCollection } from "astro:content";
import { markketplace } from "@config";
import { ProductSlideshow, ProductForm } from "@scripts/ui.product";
import Slides from "@components/Slides.astro";
import Footer from "@components/Footer.astro";

const products = await getCollection("products");
const { slug } = Astro.params;
const product = products.find((product) => product.slug === slug);

if (!product) {
  throw new Error(`Product with slug "${slug}" not found`);
}

const { data } = product;
---

<article class="product-page">
  <header>
    <h1>{data.Name}</h1>
    <p>{data.Description}</p>
  </header>

  <div class="product-details">
    <div class="product-images">
      <Slides slides={data.Images} />
    </div>
    <div class="product-info">
      <p><strong>Price:</strong> ${data.Price}</p>
      <p><strong>SKU:</strong> {data.SKU}</p>
      <p><strong>Category:</strong> {data.Category}</p>
      <p><strong>Tags:</strong> {data.Tags.join(", ")}</p>
    </div>
  </div>

  <div class="product-slideshow-modal hidden">
    <div class="modal-content">
      <span class="close">&times;</span>
      <Slides slides={data.Images} />
    </div>
  </div>

  <footer>
    <a href="/products" class="return-link">Return to product list</a>
  </footer>
</article>

<script>
  ProductSlideshow();
  ProductForm();

  const modal = document.querySelector(".product-slideshow-modal");
  const closeModal = document.querySelector(".close");

  document.querySelectorAll(".product-images img").forEach((img) => {
    img.addEventListener("click", () => {
      modal.classList.remove("hidden");
    });
  });

  closeModal.addEventListener("click", () => {
    modal.classList.add("hidden");
  });

  window.addEventListener("click", (event) => {
    if (event.target === modal) {
      modal.classList.add("hidden");
    }
  });
</script>

<style>
  .product-page {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
  }

  .product-details {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
  }

  .product-images {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .product-info {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .product-slideshow-modal {
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 1000;
  }

  .modal-content {
    background-color: #fff;
    padding: 2rem;
    border-radius: 0.5rem;
    position: relative;
  }

  .close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 2rem;
    cursor: pointer;
  }

  .return-link {
    margin-top: 2rem;
    text-decoration: underline;
    color: var(--color-accent);
  }
</style>
