---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import Hr from "@components/Hr.astro";
import Card from "@components/Card";
// import Socials from "@components/Socials.astro";
import { SITE,  } from "@config";
import { IconRss } from '@tabler/icons-react';
import { getCollection } from "astro:content";
import type Store from "../interfaces/Store";
import type Page from "../interfaces/Page";
import type Product from "../interfaces/Product";
import type Article from "../interfaces/Article";

import {
  BlocksRenderer,
  type BlocksContent,
} from "@strapi/blocks-react-renderer";
import { slugifyStr } from "@utils/slugify";
import { markketplace } from "@config";
import { marked } from "marked";

const stores = await getCollection("stores");
const store = stores.find(
  (store: any) => store.data.slug === markketplace.STORE_SLUG
)?.data as  Store  | undefined;

const products = await getCollection("products") as any as { data: Product}[];

const posts = await getCollection("posts") as any as { data: Article}[];

// const socialCount = SOCIALS.filter(social => social.active).length;

const pages = await getCollection("pages");

const homePage  = pages.find(
  (page: any) => page.data.slug === "home"
)?.data as Page  | undefined;

const links = store?.URLS || [];

const content = marked.parse(store?.Description || "");

// const products = store?.products?.data || [];
---

<Layout title={`Home | ${SITE.title}`}>
  <Header store={{data: store as Store }} products={products} />
  <main id="main-content">
    <section id="hero">
      <h1>{store?.title || "Markketplace"}</h1>
      <a
        target="_blank"
        href="/rss.xml"
        class="rss-link"
        aria-label="rss feed"
        title="RSS Feed"
      >
        <IconRss size={18} />
        <span class="sr-only">RSS Feed</span>
      </a>

      <p class="sparkle">
        <strong>
          {
            homePage?.SEO?.metaDescription ||
              store?.Description ||
              "A simple and minimal Markketplace theme."
          }
        </strong>
      </p>
      {
        store?.Logo?.url && (
          <img
            src={store?.Logo.url}
            alt={store.title}
            class="h-24 w-24 rounded-full"
          />
        )
      }
    </section>
    <Hr />
    <section class="">
      <BlocksRenderer
        content={(homePage?.Content || []) as BlocksContent}
      />
    </section>
    <Hr />
    <section>
      {
        links && links.length > 0 && (
          <div>
            <div class="mb-12 mt-6">
              <h2>Links</h2>
              {links.map(link => {
                return (
                  <p class="mb-3">
                    <LinkButton
                      href={link.URL}
                      className="underline decoration-dashed underline-offset-4 hover:text-skin-accent"
                    >
                      {link.Label}
                    </LinkButton>
                  </p>
                );
              })}
            </div>
          </div>
        <Hr />
        )
      }

{
  posts.length > 0 && (
    <section id="recent-posts">
      <h1>Recent Posts</h1>
      <ul class="-mx-4 flex flex-wrap">
        {posts.map(
          ({ data}, index) =>
            index < SITE.postPerIndex && (
              <Card
                key={index}
                href={`/blog/${new Date(data.updatedAt).getFullYear()}-${slugifyStr(data.Title)}`}
                image={data?.cover || data.SEO?.metaImage}
                tags={ data.Tags?.map(tag => tag.Label) as string[]}
                frontmatter={{
                  author: "x",
                  title: data.Title,
                  pubDatetime: new Date(data.createdAt),
                  modDatetime: new Date(data.updatedAt),
                  description: data.SEO?.metaDescription || "",
                  SEO: { ...data.SEO },
                }as any}
                secHeading={false}
              />
            )
        )}
      </ul>
      <div class="all-posts-btn-wrapper">
        <LinkButton href="/blog/">
          /Blog
          <svg xmlns="http://www.w3.org/2000/svg">
            <path
              class="dark:fill-[#E4007C]"
              d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
            >
            </path>
          </svg>
        </LinkButton>
      </div>
    </section>
  )
}

      {
        products && products.length > 0 && (
          <section id="recent-posts">
            <div class="mb-12 mt-6">
              <h2>Catalogue</h2>
              <ul class="-mx-4 flex flex-wrap">
                {products.slice(0, 5).map(({ data }) => {
                  return (
                    <Card
                      href={`/products/${data.slug || slugifyStr(data.Name)}`}
                      tags={[]}
                      image={data.Thumbnail || data.SEO?.socialImage}
                      frontmatter={{
                        author: "x",
                        title: data.Name || data.SEO?.metaTitle || "---",
                        pubDatetime: new Date(data.createdAt),
                        modDatetime: new Date(data.updatedAt),
                        description:
                          data.SEO?.metaDescription || data.Description || "",
                        SEO: {
                          ...data.SEO,
                          metaTitle:
                            data.SEO?.metaTitle ||
                            data.Name ||
                            "Product Page - MarkkÃ«t",
                          socialImage: {
                            url:
                              data.SEO?.socialImage?.url || data.Thumbnail?.url,
                          },
                        },
                      }}
                    />
                  );
                })}
              </ul>
              <div class="all-posts-btn-wrapper">
                <LinkButton href="/products/">
                  /Catalogue|
                  <svg xmlns="http://www.w3.org/2000/svg">
                    <path class="dark:fill-[#E4007C]" d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z" />
                  </svg>
                </LinkButton>
              </div>
            </div>
          </section>
        )
      }
      <Hr />
    </section>
    <section class="mb-10 pt-10">
      <div  set:html={content} />
    </section>
  </main>
  <Footer />
</Layout>

<style>
  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
  }
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl mx-8;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2 mx-8;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pb-6 pt-12;
  }
  #featured h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }
</style>
