---
import { getCollection } from "astro:content";
import TagPosts from "@layouts/TagPosts.astro";
import getPostsByTag from "@utils/getPostsByTag";
import getPagination from "@utils/getPagination";
import getUniqueTags from "@utils/getUniqueTags";
import { markketplace } from "@config";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  const tags = getUniqueTags(posts);

  // Add default "all" tag
  const allTags = [
    { tag: "all", tagName: "All Posts" },
    ...tags.filter(tag => tag.tag && tag.tag.length > 0), // Filter out empty tags
  ];

  return allTags.map(({ tag, tagName }) => ({
    params: { tag: tag || "all" }, // Ensure tag is never empty
    props: {
      tag: tag || "all",
      tagName: tagName || "All Posts",
      posts: tag === "all" ? posts : getPostsByTag(posts, tag),
    },
  }));
}

const { tag, tagName, posts } = Astro.props;

const postsByTag = getPostsByTag(posts, tag);

const pagination = getPagination({
  posts: postsByTag,
  page: 1,
  isIndex: true,
});

const stores = await getCollection("stores");
const store = stores.find(
  (store: Store) => store.data.slug === markketplace.STORE_SLUG
);
---

<main id="main-content">
  <TagPosts {...pagination} {tag} {tagName} />
</main>
