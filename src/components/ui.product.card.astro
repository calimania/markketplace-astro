---
const { product } = Astro.props;
import { type Product } from '../interfaces';

const getImageUrl = (slides: Product['Slides']) => {
  if (slides && slides.length > 0) {
    const slide = slides[0];
    if (slide.formats?.medium) return slide.formats.medium.url;
    if (slide.formats?.small) return slide.formats.small.url;
    return slide.url;
  }
  return 'https://images.pexels.com/photos/1183992/pexels-photo-1183992.jpeg';
};

const imageUrl = getImageUrl(product.Slides);
const price = product.usd_price || product.PRICES?.[0]?.Price;
---

<article class="group relative bg-white/90 backdrop-blur-sm overflow-hidden shadow-2xl hover:shadow-3xl transition-all duration-700 hover:-translate-y-2 border border-gray-100/50">
  <a href={`/products/${product.slug}`} class="block h-full">
    <div class="relative h-96 overflow-hidden">
      <img
        src={imageUrl}
        alt={product.Name}
        loading="lazy"
        class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-1000 filter grayscale group-hover:grayscale-0"
      />
      <div class="absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>

      <!-- Price badge -->
      {price && (
        <div class="absolute top-6 right-6 bg-white/95 backdrop-blur-sm px-4 py-2 shadow-lg">
          <span class="text-sm font-light text-gray-900">${price}</span>
        </div>
      )}

      <!-- Stock indicator -->
      {product.quantity !== null && (
        <div class="absolute bottom-6 left-6 bg-black/80 backdrop-blur-sm px-3 py-1">
          <span class="text-xs font-light text-white tracking-wider uppercase">
            {product.quantity > 0 ? `${product.quantity} Available` : 'Sold Out'}
          </span>
        </div>
      )}
    </div>

    <div class="p-8 flex flex-col h-full min-h-[180px]">
      <!-- Tags -->
      {product.Tag && product.Tag.length > 0 && (
        <div class="flex gap-2 mb-4">
          {product.Tag.slice(0, 2).map(tag => (
            <span
              class="px-3 py-1 bg-gray-900 text-white text-xs font-light tracking-wider uppercase"
            >
              {tag.name}
            </span>
          ))}
        </div>
      )}

      <h3 class="text-xl font-light text-gray-900 mb-3 group-hover:text-gray-700 transition-colors duration-300 leading-tight">
        {product.Name}
      </h3>

      {product.Description && (
        <p class="text-gray-600 text-sm leading-relaxed mb-4 flex-grow font-light line-clamp-3">
          {product.Description}
        </p>
      )}

      <div class="flex items-center justify-between pt-4 border-t border-gray-100">
        <span class="text-xs font-light tracking-widest text-gray-500 uppercase">
          {product.quantity && product.quantity > 0 ? 'Add to Collection' : 'View Details'}
        </span>
        <div class="w-8 h-px bg-gray-900 group-hover:w-12 transition-all duration-300"></div>
      </div>
    </div>
  </a>
</article>
